"""

Test suite 'Faberge Easter Eggs crush test' kata:
https://www.codewars.com/kata/faberge-easter-eggs-crush-test

timings 28/02/2019 - base line approach:

    (eggs, tries, runtime in sec)
    (477, 100, 0.01),
    (477, 200, 0.07),
    (477, 400, 0.52),
    (477, 600, 2.00),
    (477, 700, 2.95),
    (477, 800, 4.55),
    (477, 900, 6.45),
    (477, 1125, 12.05),
    (477, 1250, 15.93),
    (477, 1375, 19.67),
    (477, 1600, 27.88),
    (477, 1800, 37.25),
    (477, 2000, 48.47),
    (477, 2200, 65.98),
    (477, 2200, 65.98),
    (477, 2400, 78.79),
    (477, 2600, 94.32),
    (477, 2800, 111.22),
    (477, 3000, 135.18),
    (477, 3200, 158.25)

"""

import random
import pytest
from solutions.farberge_easter_eggs_crush_test import height

FIXED_TESTS = [(5, 6, 62),
               (19, 3, 7),
               (0, 14, 0),
               (2, 0, 0),
               (2, 14, 105),
               (7, 20, 137979),
               (7, 500, 1507386560013475),
               (237, 500, 431322842186730691997112653891062105065260343258332219390917925258990318721206767477889789852729810256244129132212314387344900067338552484172804802659),
               (477, 100, 1267650600228229401496703205375),
               (477, 200, 1606938044258990275541962092341162602522202993782792835301375),
               (477, 400, 2582249878086908589655919172003011874329705792829223512830659356540647622016841194629645353280137831435903171972747493375),
               (477, 600, 4149515568880992958512407863691161151012446232242415898574185263889153204411489347036937359989114357961927141210953913668852108438035236742706751414230967611075969207433735681874239),
               (477, 700, 5260135901548373507240499606915826977779041292675203250070401374440029466324088611185068614696697959699363043509944643970561098239801121274863325609829934674115121936307357059083005498215647906392078467969109567),
               (477, 800, 6668014303996410416107114117859627497040257885417932638750944083622009143957151195235999439351412627201622156032563817601194485170060088566306656217815718209194778691944184967596980240860948829681248184764894862178842429220702047945025907127),
               (477, 900, 8170842359286076686657272903972952046569091393344695992165859606526636024566582540022449551791984931500377504792832061739652473503098466383672694277253885195597253435061784221974855397898096882044896722481989497217265159901500091756372792668179025722374808903071787706687),
               (477, 1125, 87028270736840515458130779661074740555238049509046986050345081773819177972824060174028504071876456028112078942815061726424957164528413796169801438033546851827553211747447528157595054257294041164845792612079427116139098240163335930089992762423156004781910223349759369776000660176183024414697517770202202759284387234140632070894503039),
               (477, 1250, 500895918163941811599891745654550852866106799231079093530353834693771688376831455905822321993571481142381011719774171855749997416462696066086470865502866957872229675219816689337917604582461487183760511927830379997625874773053172823081576387547074315324986813088592567738141217593697089048341476664189485893648368193413865078338811927224422929474371146383228175),
               (477, 1375, 1417653497506309564166301109475111371811117068892205685527702538820511547331728812711496844388038663693231918911701690984609067379720240470238058185386971509974161192154333250484334363545116197149060360584214560817063117618531318685854702774004831379986338787287461348861186980235663776452558046065964925673581002593188504332936620386685693568186412558011952085409203477718235490131711),
               (477, 1600, 87064116931630218339599630779742935681722977297688885323705911136438309700333053119432085499858708798005717029179000924490974951509636761881938370983123766220563774665178254663400741959590307438249869469729758150984241206781840351552044937126986465466693275532222320577331346785152196963844963577208428327399583072867335904096738248056037179677753898084468219938595316654631405946663881169610155397958363196559944511674743),
               (477, 1800, 3432473082487118325779936202542536305400222431092535627723102754516548437114347865590027921338759005939331469647121726912300107667561167322670151170015865908235213983651999203203904589779686515504112714483589004564284444101274745408356647579105653006613963171916096095298979810586777919465519321934012261401619915899433898575407325601739753204136072171145031998141774500949139757757605784948096676572921235879143211281610657450891317017106002660317119),

               (477, 2200, 1028581070708105397828103813223882117051106037119095470464284775905698310597984109380296285204130743940361334951995549450887794823443811235226340672669092462872829634572475310152261571824061598743150376282177374748269946632928823311580407682237781862048230271278103948231563266507865251557367088846234003012939933607253394355735142301430014885861098928551133272320032646907759579181489225939283745501169542663222494219048324510761670712427306035243392122073808601841765832873737987640964992501257471),
               (477, 2400, 156621158190003633445621491269424246515544361688031493158906798741640374385541149523641683856307676133703398459542338132228211830331492590584892079886106529366448582937892837199460987351625261372606684207807259350512470783895467694766865276155065911588284858780750531431681723996818143147854756668103860539503750607293827230458218955878875442580106719794184836793250963322069079333923658295353291227096819440596384506246205105587621229943569003650970964744498585826098924493173849915381108386629377737498943492460626319),
               (477, 2600, 378923475873775535065014534521683236719637340671448574956070691602408012550046944159265540215217613241070601516371314239743736070198970917611602369403768741438164474573282438465207842768924604964394411347677406881750868423841388586076688401099384475026320971116905512252709629432320004965359914896993991963304035910799610458385323109490349787014747318682493308268798625977256887000378039555013546300750896213867955908001547761189598904649387340603240773242459049446958880347827905609644521940504941389885637541776056687027968401535087775),
               (477, 2800, 28756072063717951707466864835498249968748337965319425879477065863354945998261340887313303906814934876946124801129248638778916140312721555086729891962539884080622521136594442873216742991128431709438216303727688339521893521325131002217095506639522198470754377704746865087519746432263286645144294945308093464429651566802077413467431564787152171589055818374477277599975347860345611770335591913037460112906731824718950619505258527188526795009312983413912983455704601754812316302702033725602093575454310807186375723331004569018129537277794902398955386728610035),
               (477, 3000, 115707596921910136567614359043312799433388171639039162884624131001155453661561815190425023299811898018389106363031051129534702986032769038053360211501855588579148738948096839982028409030822165351295204568574690695661447818724619413749910870451067401842914253144534087945972564318974868292016019483627383563310714089360862258022807204463492455953278724672614781505623384060088713678648745386763575166634874197394300608276621049729185357994833390841336341190165879911756510585609418962147637033828542086872196325760377555181096320818354409253947146053034367009223052662559),
               (477, 3200, 37335033838166802296157723756381373742941881690998366958770247813808222416895590798037284737577716664667743757604780735832630062428638573871459303093136807483049877199097552658610969987622470190348258866473252803099373544936049643461628229742280269005884249859601381876562843923648042775152878900108185541532343894707832735612569032767786191912255253883273247885503177912628552727381614848257386096311066494537790439568699932984670712144279411266794110687229264374179360570870652549226819105146169663899927508490420664986727227778484064373520749808718407859021208717316268160438784567),
#                (477, 500, 3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127420959866658939578436425342102468327399),
#                (477, 10000, 600461396604105297697414530102187796624607351959572356167325648574309381899274255809992726647041509608874296502550889633566626669839693460163703754386982346596293491455058459167135769401101845748849154474806919582238098292865002615140455747337045606515913175800206705264197158348258877027342824497813598887212567460615138259041983561196905824547148562128771846272230901329804068790524523450526723439711852711480043539388255029594388405065227411436195811544328549172691557810516507323615400468586962803403389031164507526999175383227883564967859574994520910983381843074859047295120948531800868902878466257920126328541103471268056861774184467685136934882998123768531695075047132113902537018783846627502099156246969377215926174782697180458326177412430190794351610099943109019040476655865297322723014683870220977314898596096355345407775),
#                (4477, 10000, 1322821654800439589583624607836730988904348989635184483838675315989863014466105368917516854788173412697117838413572154358020136361352589223655004309284002331356645126308444045548293566543482035130766876362770186754407172004758665811853489554425555053643908845358225658078400880897420458613361537230692347145029937146468449752350301582966318881236041448346697864308936041807973848575815961020957973841925430394889030910761307668821228255147323012321726504304076902912463702108956669795566661303469766408411346447369441900601416549889768545415835808703102634187636408616862788628220968336302080405978291461615690517333300338026427209023338744576796796711916921553117367799805818262372383440027895158535027538219368128415201884328355249194560412959735085368099726719812587209832125121706467856448219467001478841957398661311948630752866817235891668491371246314423172093241855801986462213764272472077704090737449586014952207200402488115806480036391258788025058712927761809494607747190593544252498024965313654475511753397288550572364193751016698751124385432059855618738610770405495965628076729605040379761490680887446751742893838217109555332410367754941969641188014103364853464553866605149284789373350284278475702952002720219396744665142719739890709306702230989773403063833223142722153866753072260856577382714941017978371516349454986201414282722361391051916542589551016023190730497041390846243435703142324656990673688597131961469432804559244656573403972845547140551161388227163311600434649131672174329566859257640294347413250504689740356122993141714018763824536995756394554473053764885655217850919825484110456823718017936279926312676444075372513295121643005522507990093614688397324087158672285564265461960725048409644632356562813282311892621316990617791305949952474644973231563181802912551788866587392922962344851922680688121341506499860485837386801968860995052055236149946250164753714765692652499211749864280505191012859114807502067989910205943513218116464920029858713308646212996605582239145947185971138791937105763767017369327250323372490209312303407044663140291579276982729680418229917148740734819240902048630120317091983651644063173722960555978628497587823422375493107579742775550922433788067185239451798388809414158837037653589325259023780409914069533039705450496176647169891013697813337588075535112140970187607803915384622627522925822608742766549203712747041753891038754047696049037861483951837513375322742464580059309440669921941688909946789319835787709445925359884114002203388057590959620340874700472926972472437928806956105916022048677333952506175442513146994611155259594220312914080066998804113859428782103809127996851589054428051854854318799508483531803897517007935349549152870011407064621017082135138020750461696192841200272984193298057507960103670538167626863921460268009725329427763452347838828602301814121408102409549978991436252168617142842111215900368726060166926158698664478612916125923479260041837538259289930459928491560009034059912265253387804412611357982786191578331327),
#                (9477, 10000, 19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373453647052103349469928076954249980154345544196049720110441880956939571653303125965015135210943821418326301263747755849915390311849600620405839184806696574011638771223876684308393546154357007879197176278577010897776871509293312271446308325915207411683581162864877565099831828100966285215817182861422299916721214461558309048173509038700144141092935627106729962305873603830938160653941875633254649208486247541063094454500007666144426589865904402944100565434252161641454059574448959059378469034843694065251975339636452128242737679086169540365161261103781301842588718151775952124493692901275351280453566829099730411742607415703660912889996893392281666409912913934377489142688784235343954049469043333120897248862080530937185907276885584072254792345533781517753151320818102507950307194516201547412495983145614252402137833853984659077543542376699008277188650448599930163536123001047126485885945475644)
              ]

def generate_test_cases():
    """
    random test data
    """
    tests = []
    for _ in range(0, 30):
        eggs = random.randint(0, 30)
        tries = random.randint(0, 30)
        tests.append((eggs, tries))
    return tests

@pytest.mark.parametrize('eggs, tries, floor', FIXED_TESTS)
def test_fixed(eggs, tries, floor):
    """ tests """
    assert height(eggs, tries) == floor

@pytest.mark.parametrize('eggs, tries', generate_test_cases())
def test_random(eggs, tries):
    """ tests """
    assert height(eggs, tries) == height_naive(eggs, tries)

def height_naive(eggs, tries):
    """
    Initialiser function for recursive calculation of highest floor.
    """
    floor = 0
    if eggs > 0 and tries > 0:
        recur_lvl = 0
        floor = 0
        attempt = 0
        floor = get_floor_naive(recur_lvl, floor, attempt, eggs, tries)
    return floor

def get_floor_naive(recur_lvl, floor, attempt, eggs, tries):
    """
    Naive recursive approach for calculating highest floor.
    """
    recur_lvl += 1
    attempts_left = tries - attempt
    if eggs <= 1 or attempts_left <= 1:
        floor += attempts_left + 1
    else:
        for cur_attempt in range(attempt + 1, tries + 1):
            floor = get_floor_naive(recur_lvl, floor, cur_attempt, eggs - 1, tries)
        floor += 1
    floor -= 1 # the algorithm arrives at one floor to high
    return floor
